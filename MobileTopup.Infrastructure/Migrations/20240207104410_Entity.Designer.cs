// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MobileTopup.Infrastructure.Persistance;

#nullable disable

namespace MobileTopup.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240207104410_Entity")]
    partial class Entity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MobileTopup.Domain.UserAggregate.Entities.TopUpBeneficiary", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nickname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TopUpBeneficiaries");
                });

            modelBuilder.Entity("MobileTopup.Domain.UserAggregate.Entities.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("TopUpBeneficiaryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TopUpBeneficiaryId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("MobileTopup.Domain.UserAggregate.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MobileTopup.Domain.UserAggregate.Entities.TopUpBeneficiary", b =>
                {
                    b.HasOne("MobileTopup.Domain.UserAggregate.User", "User")
                        .WithMany("Beneficiaries")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MobileTopup.Domain.UserAggregate.Entities.Transaction", b =>
                {
                    b.HasOne("MobileTopup.Domain.UserAggregate.Entities.TopUpBeneficiary", "TopUpBeneficiary")
                        .WithMany("Transactions")
                        .HasForeignKey("TopUpBeneficiaryId");

                    b.Navigation("TopUpBeneficiary");
                });

            modelBuilder.Entity("MobileTopup.Domain.UserAggregate.Entities.TopUpBeneficiary", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("MobileTopup.Domain.UserAggregate.User", b =>
                {
                    b.Navigation("Beneficiaries");
                });
#pragma warning restore 612, 618
        }
    }
}
